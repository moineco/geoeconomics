{
  "hash": "d5a7db50b71619487fcc6c69ab4822f2",
  "result": {
    "engine": "knitr",
    "markdown": "# Administrative regions of Japan\n\n-   Load all necessary packages\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\n```\n:::\n\n\n\n\n\n\n-   Load the `shapefile` of Japan's administrative divisions\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\njp0_shp <- st_read(\"data/shapefile/jp_adm0_shp/jpn_admbnda_adm0_2019.shp\")\njp1_shp <- st_read(\"data/shapefile/jp_adm1_shp/jpn_admbnda_adm1_2019.shp\") \njp2_shp <- st_read(\"data/shapefile/jp_adm2_shp/jpn_admbnda_adm2_2019.shp\") \n```\n:::\n\n\n\n\n\n\n-   Observe the data inside the shape file of `adm0`\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\njp0_shp # for admin level 0\njp1_shp # for admin level 1\njp2_shp # for admin level 2\n```\n:::\n\n\n\n\n\n\n-   Check the geographic coordinate system of your `adm0` shapefile\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nst_crs(jp0_shp) # for admin level 0\nst_crs(jp1_shp) # for admin level 1\nst_crs(jp2_shp) # for admin level 2\n```\n:::\n\n\n\n\n\n\n-   Plot the map of Japan admin 0\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(jp0_shp) +\n  geom_sf()\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   Change the boundary color and fill it with white color.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp0_shp) +\n    geom_sf(color = \"blue\", fill = \"white\", lwd = 0.07)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   We can try the `aes()` function to improve the visual of the ADM0. Aesthetics are used to bind plotting parameters to your data. The `aes()` function defines which variables you want to plot, and which plot parameters to map them to.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp0_shp) +\n    geom_sf(aes(fill = ADM0_PCODE),  show.legend = FALSE)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   Plot the map of Japan admin 1\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(jp1_shp) +\n  geom_sf()\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   Lets change the color of boundary and fill.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp1_shp) +\n    geom_sf(color = \"blue\",  fill = \"white\", lwd = 0.07)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   We can try the `aes()` function to improve the visual of the ADM1.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp1_shp) +\n    geom_sf(aes(fill = ADM1_PCODE),  show.legend = FALSE)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   Plot the map of Japan admin 2\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nggplot(jp2_shp) +\n  geom_sf()\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   Lets change the color of boundary and fill\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp2_shp) +\n    geom_sf(color = \"blue\",  fill = \"white\", lwd = 0.07)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n-   \n\n    -   We can try the `aes()` function to improve the visual of the ADM2.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(jp2_shp) +\n    geom_sf(aes(fill = ADM2_PCODE),  show.legend = FALSE)\n```\n\n::: {.cell-output-display}\n![](lecture_10_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "lecture_10_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}