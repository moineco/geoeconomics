pacman::p_load(maps, animation, DT)
data("us.cities")
head(us.cities)
map(database = "usa")
capitals <- subset(us.cities, capital == 2) # subset state capitals
## add points proportional to population using latitude and longitude
points(x = capitals$long, y = capitals$lat, col = "blue",
cex = capitals$pop / 500000, pch = 19)
title("US state capitals") # add a title
map(database = "state", regions = "California")
cal.cities <- subset(us.cities, subset = (country.etc == "CA"))
sind <- order(cal.cities$pop, decreasing = TRUE)# order by population
top7 <- sind[1:7] # seven cities with largest population
map(database = "state", regions = "California")
points(x = cal.cities$long[top7], y = cal.cities$lat[top7], pch = 19)
## add a constant to longitude to avoid overlapping with circles
text(x = cal.cities$long[top7] + 2.25, y = cal.cities$lat[top7],
label = cal.cities$name[top7])
title("Largest cities of California")
usa <- map(database = "usa", plot = FALSE) # save map
names(usa)  # list elements
length(usa$x)
head(cbind(usa$x, usa$y)) # first five coordinates of a polygon
allcolors <- colors()
head(allcolors) # some colors
length(allcolors) # number of color names
red <- rgb(red = 1, green = 0, blue = 0) # red
green <- rgb(red = 0, green = 1, blue = 0) # green
blue <- rgb(red = 0, green = 0, blue = 1) # blue
c(red, green, blue) # results
black <- rgb(red = 0, green = 0, blue = 0) # black
white <- rgb(red = 1, green = 1, blue = 1) # white
c(black, white) # results
rgb(red = c(0.5, 1), green = c(0, 1), blue = c(0.5, 0))
## semitransparent blue
blue.trans <- rgb(red = 0, green = 0, blue = 1, alpha = 0.5)
## semitransparent black
black.trans <- rgb(red = 0, green = 0, blue = 0, alpha = 0.5)
## completely colored dots; difficult to distinguish
plot(x = c(1, 1), y = c(1, 1.2), xlim = c(0.5, 4.5), ylim = c(0.5, 4.5),
pch = 16, cex = 5, ann = FALSE, col = black)
points(x = c(3, 3), y = c(3, 3.2), pch = 16, cex = 5, col = blue)
## semitransparent; easy to distinguish
points(x = c(2, 2), y = c(2, 2.2), pch = 16, cex = 5, col = black.trans)
points(x = c(4, 4), y = c(4, 4.2), pch = 16, cex = 5, col = blue.trans)
pres08 <- read.csv("data/csv/pres08.csv")
## two-party vote share
pres08$Dem <- pres08$Obama / (pres08$Obama + pres08$McCain)
pres08$Rep <- pres08$McCain / (pres08$Obama + pres08$McCain)
## color for California
cal.color <- rgb(red = pres08$Rep[pres08$state == "CA"],
blue = pres08$Dem[pres08$state == "CA"],
green = 0)
library(DT)
datatable(pres08)
## California as a blue state
map(database = "state", regions = "California", col = "blue",
fill = TRUE)
## California as a purple state
map(database = "state", regions = "California", col = cal.color,
fill = TRUE)
## USA as red and blue states
map(database = "state") # create a map
for (i in 1:nrow(pres08)) {
if ((pres08$state[i] != "HI") & (pres08$state[i] != "AK") &
(pres08$state[i] != "DC")) {
map(database = "state", regions = pres08$state.name[i],
col = ifelse(pres08$Rep[i] > pres08$Dem[i], "red", "blue"),
fill = TRUE, add = TRUE)
} }
## USA as purple states
map(database = "state") # create a map
for (i in 1:nrow(pres08)) {
if ((pres08$state[i] != "HI") & (pres08$state[i] != "AK") &
(pres08$state[i] != "DC")) {
map(database = "state", regions = pres08$state.name[i],
col = rgb(red = pres08$Rep[i], blue = pres08$Dem[i],
green = 0), fill = TRUE, add = TRUE)
} }
walmart <- read.csv("data/csv/walmart.csv")
## red = Wal-MartStore, green = SuperCenter, blue = DistributionCenter
walmart$storecolors <- NA # create an empty vector
walmart$storecolors[walmart$type == "Wal-MartStore"] <-
rgb(red = 1, green = 0, blue = 0, alpha = 1/3)
library(DT)
datatable(walmart)
walmart$storecolors[walmart$type == "SuperCenter"] <-
rgb(red = 0, green = 1, blue = 0, alpha = 1/3)
walmart$storecolors[walmart$type == "DistributionCenter"] <-
rgb(red = 0, green = 0, blue = 1, alpha = 1/3)
## larger circles for DistributionCenter
walmart$storesize <- ifelse(walmart$type == "DistributionCenter", 1, 0.5)
## map with legend
map(database = "state")
points(walmart$long, walmart$lat, col = walmart$storecolors,
pch = 19, cex = walmart$storesize)
legend(x = -120, y = 32, bty = "n",
legend = c("Walmart", "Supercenter", "Distribution center"),
col = c("red", "green", "blue"), pch = 19, # solid circles
pt.cex = c(0.5, 0.5, 1)) # size of circles
walmart.map <- function(data, date) {
walmart <- subset(data, subset = (opendate <= date))
map(database = "state")
points(walmart$long, walmart$lat, col = walmart$storecolors,
pch = 19, cex = walmart$storesize)
}
walmart$opendate <- as.Date(walmart$opendate)
walmart.map(walmart, as.Date("1974-12-31"))
title("1975")
walmart.map(walmart, as.Date("1984-12-31"))
title("1985")
walmart.map(walmart, as.Date("1994-12-31"))
title("1995")
walmart.map(walmart, as.Date("2004-12-31"))
title("2005")
n <- 25 # number of maps to animate
dates <- seq(from = min(walmart$opendate),
to = max(walmart$opendate), length.out = n)
library("animation")
saveHTML({
for (i in 1:length(dates)) {
walmart.map(walmart, dates[i])
title(dates[i])
}
}, title = "Expansion of Walmart", htmlfile = "htmls/walmart.html",
outdir = getwd(), autobrowse = FALSE)
library(tidyverse)
library(sf)
#| code-fold: false
bd1_shp <- st_read("data/shapefile/bd_adm1_shp/bgd_admbnda_adm1_bbs_20201113.shp")
bd2_shp <- st_read("data/shapefile/bd_adm2_shp/bgd_admbnda_adm2_bbs_20201113.shp")
bd3_shp <- st_read("data/shapefile/bd_adm3_shp/bgd_admbnda_adm3_bbs_20201113.shp")
#| code-fold: false
bd1_shp
#| code-fold: false
bd2_shp
#| code-fold: false
bd3_shp
#| code-fold: false
st_crs(bd1_shp)
#| code-fold: false
st_crs(bd2_shp)
#| code-fold: false
st_crs(bd3_shp)
#| code-fold: false
ggplot(bd1_shp) +
geom_sf() +
geom_sf_text(aes(label = ADM1_EN), size = 2)
#| code-fold: false
ggplot(bd2_shp) +
geom_sf()
#| code-fold: false
ggplot(bd3_shp) +
geom_sf()
#| code-fold: false
theme_custom_map <- function(base_size = 11,
base_family = "",
base_line_size = base_size / 22,
base_rect_size = base_size / 22) {
theme_bw(base_size = base_size,
base_family = base_family,
base_line_size = base_line_size) %+replace%
theme(
axis.title = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
complete = TRUE
)
}
#| code-fold: false
ggplot(bd1_shp) +
geom_sf() +
geom_sf_text(aes(label = ADM1_EN), size = 2) +
theme_custom_map()
#| code-fold: false
ggplot(bd2_shp) +
geom_sf() +
theme_custom_map()
#| code-fold: false
ggplot(bd3_shp) +
geom_sf() +
theme_custom_map()
#| code-fold: false
bd1_pop <- read.csv("data/csv/bd_pop_adm1_2022.csv")
bd2_pop <- read.csv("data/csv/bd_pop_adm2_2022.csv")
bd3_pop <- read.csv("data/csv/bd_pop_adm3_2022.csv")
#| code-fold: false
bd1_shp_pop <- merge(bd1_shp, bd1_pop, by=c("ADM1_PCODE"))
bd1_shp_pop <- st_make_valid(bd1_shp_pop)
glimpse(bd1_shp_pop)
#| code-fold: false
bd2_shp_pop <- merge(bd2_shp, bd2_pop, by=c("ADM2_PCODE"))
bd2_shp_pop <- st_make_valid(bd2_shp_pop)
glimpse(bd2_shp_pop)
#| code-fold: false
bd3_shp_pop <- merge(bd3_shp, bd3_pop, by=c("ADM3_PCODE"))
bd3_shp_pop <- st_make_valid(bd3_shp_pop)
glimpse(bd3_shp_pop)
#| code-fold: false
ggplot(bd1_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
geom_sf_text(aes(label = ADM1_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population") +
theme_map() +
theme(legend.direction="horizontal") +
labs(title = "Divisions of Bangladesh",
subtitle = "Population density of Bangladesh",
caption = "Source of data: BBS")
#| code-fold: false
ggplot(bd1_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
geom_sf_text(aes(label = ADM1_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population")
#| code-fold: false
#| warning: false
ggplot(bd1_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
geom_sf_text(aes(label = ADM1_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population")
#| code-fold: false
#| warning: false
ggplot(bd2_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
#geom_sf_text(aes(label = ADM2_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population") +
#| code-fold: false
#| warning: false
ggplot(bd2_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
#geom_sf_text(aes(label = ADM2_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population")
#| code-fold: false
#| warning: false
ggplot(bd3_shp_pop) +
geom_sf(aes(fill=F_TL), color = "white", lwd = 0.07) +
#geom_sf_text(aes(label = ADM2_EN), size = 2) +
scale_fill_viridis_c(option = "magma", name = "Population")
#| message: false
library(tidyverse)
library(sf)
