[
  {
    "objectID": "lecture_10.html",
    "href": "lecture_10.html",
    "title": "10  Population density maps of Bangladesh",
    "section": "",
    "text": "Load all necessary packages\n\n\nlibrary(tidyverse)\nlibrary(sf)\n\n\nAlternatively load all necessary packages by using pacman package manager\n\n\npacman::p_load(tidyverse, stringr, sf, RColorBrewer, leaflet, ggplot2, ggthemes, patchwork, plotly, ggrepel)\n\nLoad the shapefile of Bangladesh admin level 1 which represents the divisions.\n\nbd1_shp &lt;- st_read(\"data/shapefile/bd_adm1_shp/bgd_admbnda_adm1_bbs_20201113.shp\")\nbd2_shp &lt;- st_read(\"data/shapefile/bd_adm2_shp/bgd_admbnda_adm2_bbs_20201113.shp\")\nbd3_shp &lt;- st_read(\"data/shapefile/bd_adm3_shp/bgd_admbnda_adm3_bbs_20201113.shp\")\n\n\nObserve the data inside the shape file\n\n\nbd1_shp\n\n\nbd2_shp\n\n\nbd3_shp\n\n\nCheck the geographic coordinate system of your shapefile\n\n\nst_crs(bd1_shp)\n\n\nst_crs(bd2_shp)\n\n\nst_crs(bd3_shp)\n\n\nPlot the map and show the name of the divisions\n\n\nggplot(bd1_shp) +\n  geom_sf() + \n  geom_sf_text(aes(label = ADM1_EN), size = 2) \n\n\n\n\n\n\n\n\n\nggplot(bd2_shp) +\n  geom_sf() \n\n\n\n\n\n\n\n\n\nggplot(bd3_shp) +\n  geom_sf() \n\n\n\n\n\n\n\n\n\nPrepare a custom theme to make the visualization of this map better than previous default version\n\n\ntheme_custom_map &lt;- function(base_size = 11,\n                             base_family = \"\",\n                             base_line_size = base_size / 22,\n                             base_rect_size = base_size / 22) {\n    theme_bw(base_size = base_size, \n             base_family = base_family,\n             base_line_size = base_line_size) %+replace%\n        theme(\n            axis.title = element_blank(), \n            axis.text = element_blank(),\n            axis.ticks = element_blank(),\n            complete = TRUE\n        )\n}\n\n\nggplot(bd1_shp) +\n  geom_sf() +\n  geom_sf_text(aes(label = ADM1_EN), size = 2) +\n  theme_custom_map()\n\n\n\n\n\n\n\n\n\nggplot(bd2_shp) +\n  geom_sf() +\n   theme_custom_map()\n\n\n\n\n\n\n\n\n\nggplot(bd3_shp) +\n  geom_sf() +\n   theme_custom_map()\n\n\n\n\n\n\n\n\n\nImport population data of all divisions of Bangladesh\n\n\nbd1_pop &lt;- read.csv(\"data/csv/bd_pop_adm1_2022.csv\")\nbd2_pop &lt;- read.csv(\"data/csv/bd_pop_adm2_2022.csv\")\nbd3_pop &lt;- read.csv(\"data/csv/bd_pop_adm3_2022.csv\")\n\n\nMerge the shapefile and csv data-set\n\n\nbd1_shp_pop &lt;- merge(bd1_shp, bd1_pop, by=c(\"ADM1_PCODE\"))\nbd1_shp_pop &lt;- st_make_valid(bd1_shp_pop)\nglimpse(bd1_shp_pop)\n\n\nbd2_shp_pop &lt;- merge(bd2_shp, bd2_pop, by=c(\"ADM2_PCODE\"))\nbd2_shp_pop &lt;- st_make_valid(bd2_shp_pop)\nglimpse(bd2_shp_pop)\n\n\nbd3_shp_pop &lt;- merge(bd3_shp, bd3_pop, by=c(\"ADM3_PCODE\"))\nbd3_shp_pop &lt;- st_make_valid(bd3_shp_pop)\nglimpse(bd3_shp_pop)\n\n\nDraw the map ADM1\n\n\nggplot(bd1_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    geom_sf_text(aes(label = ADM1_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\")\n\n\n\n\n\n\n\n\n\nBy loading additional package, we can draw for informative maps\n\n\nggplot(bd1_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    geom_sf_text(aes(label = ADM1_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\") +\n    theme_map() + \n    theme(legend.direction=\"horizontal\") +\n     labs(title = \"Divisions of Bangladesh\", \n         subtitle = \"Population density of Bangladesh\", \n         caption = \"Source of data: BBS\")\n\n\nDraw the map ADM2\n\n\nggplot(bd2_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    #geom_sf_text(aes(label = ADM2_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\")\n\n\n\n\n\n\n\n\n\nBy loading additional package, we can draw for informative maps\n\n\nggplot(bd2_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    #geom_sf_text(aes(label = ADM2_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\") +\n    theme_map() + \n    theme(legend.direction=\"horizontal\") +\n     labs(title = \"Districts of Bangladesh\", \n         subtitle = \"Population density of Bangladesh\", \n         caption = \"Source of data: BBS\")\n\n\nDraw the map ADM3\n\n\nggplot(bd3_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    #geom_sf_text(aes(label = ADM2_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\")\n\n\n\n\n\n\n\n\n\nBy loading additional package, we can draw for informative maps\n\n\nggplot(bd3_shp_pop) +\n    geom_sf(aes(fill=F_TL), color = \"white\", lwd = 0.07) +\n    #geom_sf_text(aes(label = ADM2_EN), size = 2) +\n    scale_fill_viridis_c(option = \"magma\", name = \"Population\") +\n    theme_map() + \n    theme(legend.direction=\"horizontal\") +\n     labs(title = \"Upazila/Thana of Bangladesh\", \n         subtitle = \"Population density of Bangladesh\", \n         caption = \"Source of data: BBS\")",
    "crumbs": [
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>Population density maps of Bangladesh</span>"
    ]
  },
  {
    "objectID": "lecture_11.html",
    "href": "lecture_11.html",
    "title": "11  Administrative maps of Japan",
    "section": "",
    "text": "Load all necessary packages\n\n\nlibrary(tidyverse)\nlibrary(sf)\n\n\nLoad the shapefile of Japan’s administrative divisions\n\n\njp0_shp &lt;- st_read(\"data/shapefile/jp_adm0_shp/jpn_admbnda_adm0_2019.shp\")\njp1_shp &lt;- st_read(\"data/shapefile/jp_adm1_shp/jpn_admbnda_adm1_2019.shp\") \njp2_shp &lt;- st_read(\"data/shapefile/jp_adm2_shp/jpn_admbnda_adm2_2019.shp\") \n\n\nObserve the data inside the shape file of adm0\n\n\njp0_shp # for admin level 0\n\nSimple feature collection with 1 feature and 3 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 122.9349 ymin: 24.04582 xmax: 153.9819 ymax: 45.55571\nGeodetic CRS:  WGS 84\n  ADM0_EN ADM0_JA ADM0_PCODE                       geometry\n1   Japan    日本         JP MULTIPOLYGON (((123.8028 24...\n\njp1_shp # for admin level 1\n\nSimple feature collection with 47 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 122.9349 ymin: 24.04582 xmax: 153.9819 ymax: 45.55571\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   ADM0_EN ADM0_JA ADM0_PCODE    ADM1_EN ADM1_JA ADM1_PCODE\n1    Japan    日本         JP      Aichi  愛知県       JP23\n2    Japan    日本         JP      Akita  秋田県       JP05\n3    Japan    日本         JP     Aomori  青森県       JP02\n4    Japan    日本         JP      Chiba  千葉県       JP12\n5    Japan    日本         JP      Ehime  愛媛県       JP38\n6    Japan    日本         JP      Fukui  福井県       JP18\n7    Japan    日本         JP    Fukuoka  福岡県       JP40\n8    Japan    日本         JP  Fukushima  福島県       JP07\n9    Japan    日本         JP       Gifu  岐阜県       JP21\n10   Japan    日本         JP      Gunma  群馬県       JP10\n                         geometry\n1  MULTIPOLYGON (((137.0072 34...\n2  MULTIPOLYGON (((139.8763 39...\n3  MULTIPOLYGON (((141.5279 40...\n4  MULTIPOLYGON (((140.1129 35...\n5  MULTIPOLYGON (((132.5589 32...\n6  MULTIPOLYGON (((136.0665 35...\n7  MULTIPOLYGON (((130.1322 33...\n8  MULTIPOLYGON (((140.9482 37...\n9  MULTIPOLYGON (((137.2936 36...\n10 MULTIPOLYGON (((139.1777 36...\n\njp2_shp # for admin level 2\n\nSimple feature collection with 1892 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 122.9349 ymin: 24.04582 xmax: 153.9819 ymax: 45.55571\nGeodetic CRS:  WGS 84\nFirst 10 features:\n   ADM0_EN ADM0_JA ADM0_PCODE   ADM1_EN ADM1_JA ADM1_PCODE  ADM2_JA\n1    Japan    日本         JP  Hokkaido  北海道       JP01 えりも町\n2    Japan    日本         JP  Hokkaido  北海道       JP01 せたな町\n3    Japan    日本         JP  Hokkaido  北海道       JP01 ニセコ町\n4    Japan    日本         JP  Hokkaido  北海道       JP01 むかわ町\n5    Japan    日本         JP  Hokkaido  北海道       JP01   七飯町\n6    Japan    日本         JP  Hokkaido  北海道       JP01   三笠市\n7    Japan    日本         JP  Hokkaido  北海道       JP01 上ノ国町\n8    Japan    日本         JP  Hokkaido  北海道       JP01 上士幌町\n9    Japan    日本         JP  Hokkaido  北海道       JP01 上富良野\n10   Japan    日本         JP  Hokkaido  北海道       JP01   上川町\n        ADM2_EN ADM2_PCODE                       geometry\n1    Erimo Town    JP01001 MULTIPOLYGON (((143.1999 42...\n2   Setana Town    JP01002 MULTIPOLYGON (((139.9128 42...\n3        Niseko    JP01003 MULTIPOLYGON (((140.6488 42...\n4        Mukawa    JP01004 MULTIPOLYGON (((142.2813 42...\n5         Nanae    JP01005 MULTIPOLYGON (((140.7036 42...\n6        Mikasa    JP01006 MULTIPOLYGON (((142.03 43.3...\n7    Kaminokuni    JP01007 MULTIPOLYGON (((140.3569 41...\n8   Kamishihoro    JP01008 MULTIPOLYGON (((143.234 43....\n9    Kamifurano    JP01009 MULTIPOLYGON (((142.6857 43...\n10 Kawakami-cho    JP01010 MULTIPOLYGON (((143.0549 43...\n\n\n\nCheck the geographic coordinate system of your adm0 shapefile\n\n\nst_crs(jp0_shp) # for admin level 0\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\nst_crs(jp1_shp) # for admin level 1\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\nst_crs(jp2_shp) # for admin level 2\n\nCoordinate Reference System:\n  User input: WGS 84 \n  wkt:\nGEOGCRS[\"WGS 84\",\n    DATUM[\"World Geodetic System 1984\",\n        ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n            LENGTHUNIT[\"metre\",1]]],\n    PRIMEM[\"Greenwich\",0,\n        ANGLEUNIT[\"degree\",0.0174532925199433]],\n    CS[ellipsoidal,2],\n        AXIS[\"latitude\",north,\n            ORDER[1],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        AXIS[\"longitude\",east,\n            ORDER[2],\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n    ID[\"EPSG\",4326]]\n\n\n\nPlot the map of Japan admin 0\n\n\nggplot(jp0_shp) +\n  geom_sf()\n\n\n\n\n\n\n\n\n\nPlot the map of Japan admin 1\n\n\nggplot(jp1_shp) +\n  geom_sf()\n\n\n\n\n\n\n\n\n\nPlot the map of Japan admin 2\n\n\nggplot(jp2_shp) +\n  geom_sf()",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Administrative maps of Japan</span>"
    ]
  },
  {
    "objectID": "lecture_11.html#a-quarto-book",
    "href": "lecture_11.html#a-quarto-book",
    "title": "11  Creating a final report",
    "section": "",
    "text": "HTML\nPDF\nMS Word\nEPUB",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Creating a final report</span>"
    ]
  },
  {
    "objectID": "lecture_11.html#workflow",
    "href": "lecture_11.html#workflow",
    "title": "11  Creating a final report",
    "section": "11.2 Workflow",
    "text": "11.2 Workflow\nWe will check the steps to create and edit a simple book with chapters contained in the files index.qmd, intro.qmd, summary.qmd.\nConfig File\nA Quarto project file (_quarto.yml) is contained within the book project directory. This file contains the initial configuration for your book. For example:\n---\nproject:\n  type: book\nbook:\n  title: \"GIS with R\"\n  author: \"Moinul Islam\"\n  date: \"4/18/2024\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - summary.qmd\n    - references.qmd\nbibliography: references.bib\nformat:\n  html:\n    theme: cosmo\n  pdf:\n    documentclass: scrreprt\n  epub:\n    cover-image: cover.png\n---",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Creating a final report</span>"
    ]
  },
  {
    "objectID": "lecture_11.html#book-structure",
    "href": "lecture_11.html#book-structure",
    "title": "11  Creating a final report",
    "section": "11.3 Book Structure",
    "text": "11.3 Book Structure\nThe structure of a Quarto book can be as simple as a list of chapters, or can alternatively incorporate multiple parts and/or appendices. Quarto book chapters and sections are automatically numbered (for cross-referencing), however you can also specify that some parts of the book should remain unnumbered.\nThe simple book configuration generated by quarto create project book illustrates the basics:\n---\nbook:\n  title: \"GIS with R\"\n  author: \"Moinul Islam\"\n  date: \"5/9/2021\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - summary.qmd\n    - references.qmd\n---\nThe index.qmd file is required (because Quarto books also produce a website in HTML format). The references.qmd file will include the generated bibliography.\nTitles\nSince rendering options are provided in _quarto.yml, you’ll typically see a simple level-one header at the top of chapters. For example:\n# Introduction\nNote that the following is also still perfectly valid:\n---\ntitle: \"Introduction\"\n---\nIn the absence of a level-one header or a title set in the YAML front matter, the first header in the page will be used as the title.\nChapter Numbers\nAll chapters are numbered by default. If you want a chapter to be unnumbered simply add the .unnumbered class to its main header. For example:\n# Introduction {.unnumbered}\nSection Numbers\nYou can set the numbering depth via the number-depth option. For example, to only number sections immediately below the chapter level, use this:\nnumber-depth: 1\nCreating an Index\nTo add an index to the PDF output for a book, add these include-in-header and include-after-body entries to your pdf format configuration in _quarto.yml: quart\n---\nformat:\n  html:\n    theme: cosmo\n  pdf:\n    documentclass: scrreprt\n    include-in-header: \n      text: |\n        \\usepackage{makeidx}\n        \\makeindex\n    include-after-body: \n      text: |\n        \\printindex\n---\nParts & Appendices\nYou can divide your book into parts using part within the book chapters. For example:\n---\nchapters:\n  - index.qmd\n  - preface.qmd\n  - part: dice.qmd\n    chapters: \n      - basics.qmd\n      - packages.qmd\n  - part: cards.qmd\n    chapters:\n      - objects.qmd\n      - notation.qmd\n      - modifying.qmd\n      - environments.qmd\n---\nYou can include appendices by adding an appendices key to your book config. For example:\n---\nbook:\n  title: \"GIS with R\"\n  author: \"Moinul Islam\"\n  date: \"5/9/2024\"\n  chapters:\n    - index.qmd\n    - intro.qmd\n    - summary.qmd\n    - references.qmd\n  appendices:\n    - tools.qmd\n    - resources.qmd\n---\nNavigation bar\nOptions that define the top navigation bar for a book For example:\n---\nbook:\n  navbar:\n    search: true\n---\nNavigation items\nNav items appear in the left or right key of navbar definitions, or contents key of sidebar definitions. For example:\n---\nbook:\n  navbar:\n    right:\n      - icon: github\n        href: https://github.com/\n        aria-label: GitHub\n---\nSidebar\nOptions that define the side navigation area for a book. For example:\n---\nbook:\n  sidebar:\n    search: true\n---\nSidebar Tools\nAction buttons that appear on the sidebar. For example:\n---\nbook:\n  sidebar:\n    tools:\n      - icon: github\n        href: https://github.com/\n---",
    "crumbs": [
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Creating a final report</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Lovelace, R., Nowosad, J., and Muenchow, J. (2019). Geocomputation with R. CRC Press.\nComber, L., and Brunsdon, C. (2020). Geographical Data Science and Spatial Data Analysis: An Introduction in R. Sage.\nKopczewska, K. (2020). Applied Spatial Statistics and Econometrics: Data Analysis in R. Routledge.",
    "crumbs": [
      "References"
    ]
  },
  {
    "objectID": "lecture_1.html",
    "href": "lecture_1.html",
    "title": "1  R packages for GIS",
    "section": "",
    "text": "1.1 R packages for management:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R packages for GIS</span>"
    ]
  },
  {
    "objectID": "lecture_1.html#r-packages-for-management",
    "href": "lecture_1.html#r-packages-for-management",
    "title": "1  R packages for GIS",
    "section": "",
    "text": "devtools\n\n\nCRAN install.packages(\"devtools\")\nGitHub devtools::install_github(\"r-lib/devtools\")\n\n\nremotes\n\n\nCRAN install.packages(\"remotes\")\nGitHub remotes::install_github(\"r-lib/conflicted\")\n\n\npak\n\n\nCRAN install.packages(\"pak\")\n\n\npacman\n\n\nCRAN install.packages(\"pacman\")\nGitHub devtools::install_github(\"r-lib/devtools\")\n\n\nstargazer\n\n\nCRAN install.packages( \"stargazer\")\nGitHub devtools::install_github(\"ChandlerLutz/stargazer\")\n\n\nreadxl\n\n\nCRAN install.packages(\"readxl\")\nGitHub remotes::install_github(\"hadley/readxl\")\n\n\nhere\n\n\nCRAN install.packages(\"here\")\nGitHub devtools::install_github(\"r-lib/here\")\n\n\nrvest\n\n\nCRAN install.packages(\"rvest\")\nGitHub devtools::install_github(\"tidyverse/rvest\")\n\n\ncowplot\n\n\nCRAN install.packages(\"cowplot\")\nGitHub remotes::install_github(\"wilkelab/cowplot\")\n\n\nggthemes\n\n\nCRAN install.packages('ggthemes', dependencies = TRUE)\nGitHub devtools::install_github(c(\"hadley/ggplot2\", \"jrnold/ggthemes\"))\n\n\nggpubr\n\n\nCRAN install.packages(\"ggpubr\")\nGitHub devtools::install_github(\"kassambara/ggpubr\")\n\n\nplotly\n\n\nCRAN install.packages(\"plotly\")\nGitHub devtools::install_github(\"ropensci/plotly\")\n\n\nstringr\n\n\nCRAN install.packages(\"stringr\")\nGitHub devtools::install_github(\"hadley/stringr\")\n\n\npatchwork\n\n\nCRAN install.packages(\"patchwork\")\nGitHub devtools::install_github(\"thomasp85/patchwork\")\n\n\nmagrittr\n\n\nCRAN install.packages(\"magrittr\")\nGitHub devtools::install_github(\"tidyverse/magrittr\")\n\n\nDBI [Connect R to database management systems]\n\n\nCRAN install.packages(\"DBI\")\nGitHub devtools::install_github(\"rstats-db/DBI\")\n\n\nRSQLite [Easy way to use a database from R because the package itself contains SQLite]\n\n\nCRAN install.packages(\"RSQLite\")\nGitHub devtools::install_github(\"r-dbi/RSQLite\")\n\n\ndata.table [Extension of data.frame for fast processing of large data]\n\n\nCRAN install.packages(\"data.table\")\nGitHub install.packages(\"data.table\", repos=\"https://rdatatable.gitlab.io/data.table\")\n\n\nlubridate [Functions to work with date-times and time-spans]\n\n\nCRAN install.packages(\"lubridate\")\nGitHub devtools::install_github(\"tidyverse/lubridate\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R packages for GIS</span>"
    ]
  },
  {
    "objectID": "lecture_1.html#r-packages-for-gis",
    "href": "lecture_1.html#r-packages-for-gis",
    "title": "1  R packages for GIS",
    "section": "1.2 R packages for GIS:",
    "text": "1.2 R packages for GIS:\n\n1.2.1 Basic data manipulation\n\nsf [for vector data]\n\n\nCRAN install.packages(\"sf\")\nGitHub remotes::install_github(\"r-spatial/sf\")\n\nsf package installation in Windows OS is straight frward. And the above codes should be sufficient to install sf. However, in MacOS and Linux (Ubuntu/Fedora), some additional steps are necessary.\n\nFor MacOS\n\n– First we need to install gdal and the easiest way to install gdal is using Homebrew.\nbrew install pkg-config\nbrew install gdal\n– Next we need to install sf by using following command.\ninstall.packages(\"sf\", type = \"source\", configure.args = \"--with-proj-lib=$(brew --prefix)/lib/\")\n\nraster [for raster data]\n\n\nCRAN install.packages(\"raster\")\nGitHub remotes::install_github(\"rspatial/raster\")\n\n\nshapefiles\n\n\nCRAN install.packages(\"shapefiles\")\n\n\nncdf4\n\n\nCRAN install.packages(“ncdf4”)\nGitHub devtools::install_github(\"mdsumner/ncdf4\")\n\n\nsp\n\n\nCRAN install.packages(\"sp\", dependencies=TRUE)\nGitHub devtools::install_github(\"edzer/sp\")\n\n\n\n1.2.2 Cartography and data visualization\n\ntidyverse [Includes the packages ggplot2, dplyr, tidyr, readr, purrr, tibble, stringr, forcats]\n\n\nCRAN install.packages(\"tidyverse\")\nGitHub pak::pak(\"tidyverse/tidyverse\")\n\n\nRColorBrewer\n\n\nCRAN install.packages(\"RColorBrewer\")\nGitHub devtools::install_github(\"cran/RColorBrewer\")\n\n\nviridis\n\n\nCRAN install.packages(\"viridis\")\nGitHub devtools::install_github(\"sjmgarnier/viridis\")\n\n\ntmap\n\n\nCRAN install.packages(\"tmap\")\nGitHub pak::pak(\"r-tmap/tmap\")\n\n\nleaflet\n\n\nCRAN install.packages(\"leaflet\")\nGitHub devtools::install_github(\"rstudio/leaflet\")\n\n\nmapview\n\n\nCRAN install.packages(\"mapview\")\nGitHub remotes::install_github(\"r-spatial/mapview\")\n\n\ncartography\n\n\nCRAN install.packages(\"cartography\")\nGitHub remotes::install_github(\"riatelab/cartography\")\n\n\nggmap\n\n\nCRAN install.packages(\"ggmap\")\nGitHub remotes::install_github(\"dkahle/ggmap\")\n\n\nrayshader\n\n\nCRAN install.packages(\"rayshader\")\nGitHub devtools::install_github(\"tylermorganwall/rayshader\")\n\n\ngeojsonio\n\n\nCRAN install.packages(\"geojsonio\")\nGitHub devtools::install_github(\"ropensci/geojsonio\")\n\n\nshinyjs\n\n\nCRAN install.packages(\"shinyjs\")\nGitHub remotes::install_github(\"daattali/shinyjs\")\n\n\nGGally [Extends ggplot2 by adding several functions to reduce the complexity of combining geometric objects with transformed data]\n\n\nCRAN install.packages(\"GGally\")\nGitHub devtools::install_github(\"ggobi/ggally\")\n\n\ngrid [A set of graphical functions which support a great deal of flexibility in the layout of graphics]\n\n\nCRAN install.packages(\"grid\")\nGitHub devtools::install_github(\"cran/grid\")\n\n\ngridExtra [Provides a number of user-level functions to work with “grid” graphics, notably to arrange multiple grid-based plots on a page, and draw tables]\n\n\nCRAN install.packages(\"gridExtra\")\nGitHub devtools::install_github(\"cran/gridExtra\")\n\n\ncartogram [Construct continuous and non-contiguous area cartograms]\n\n\nCRAN install.packages(\"cartogram\")\nGitHub devtools::install_github(\"sjewo/cartogram\")\n\n\nvisNetwork [Use vis.js library for network visualization]\n\n\nCRAN install.packages(\"visNetwork\")\nGitHub devtools::install_github(\"datastorm-open/visNetwork\")\n\n\n\n1.2.3 Spatial statistics\n\nspatial\n\n\nGitHub remotes::install_github(\"rspatial/rspatial\")\n\n\nspatstat\n\n\nCran install.packages(\"spatstat\")\nGitHub remotes::install_github(\"spatstat/spatstat\")\n\n\ngstat\n\n\nCran install.packages(\"gstat\")\nGitHub remotes::install_github(\"r-spatial/gstat\")\n\n\nspdep\n\n\nCran install.packages(\"spdep\", repos=\"http://R-Forge.R-project.org\")\nGitHub devtools::install_github(\"r-spatial/spdep\")\n\n\ngeoshape\n\n\nCran\nGitHub\n\n\nggspatial\n\n\nCran install.packages(\"ggspatial\")\nGitHub remotes::install_github(\"paleolimbot/ggspatial\")\n\n\nspdep [A collection of functions to create spatial weights matrix objects from polygon]\n\n\nCran install.packages(\"spdep\")\nGitHub devtools::install_github(\"r-spatial/spdep\")\n\n\ngeogrid [Turn geospatial polygons into regular or hexagonal grids]\n\n\nGitHub devtools::install_github(\"jbaileyh/geogrid\")\n\n\nGISTools [Some further GIS capabilities for R]\n\n\nCran install.packages(\"GISTools\")\n\n\nRgoogleMaps\n\n\nCran install.packages(\"RgoogleMaps\")\nGitHub devtools::install_github(\"cran/RgoogleMaps\")\n\n\n\n1.2.4 Data sources\n\nOpenStreetMap\n\n\nCran install.packages(\"OpenStreetMap\")\nGitHub devtools::install_github(\"cran/OpenStreetMap\")\n\n\nrnaturalearth\n\n\nCran install.packages(\"rnaturalearth\", dependencies = TRUE)\nGitHub devtools::install_github(\"ropensci/rnaturalearth\")\n\n\nrnaturalearthdata\n\n\nCran install.packages(\"rnaturalearthdata\")\nGitHub devtools::install_github(\"ropensci/rnaturalearthdata\")\n\n\nrastervis\n\n\nCran install.packages(\"rasterVis\")\nGitHub devtools::install_github(\"oscarperpinan/rasterVis\")\n\n\nmaps\n\n\nCran install.packages(\"maps\")\n\n\nspData\n\n\nCran install.packages(\"spData\")\nGitHub devtools::install_github(\"nowosad/spData\")\n\n\nrgeos\n\n\nCran install.packages(\"rgeos\", repos=\"http://R-Forge.R-project.org\")\nGitHub devtools::install_github(\"cran/rgeos\")\n\n\njpndistrict\n\n\nCran install.packages(\"jpndistrict\")\nGitHub devtools::install_github(\"uribo/jpndistrict\", force=TRUE)\n\n\ncountrycode\n\n\nCran install.packages(\"countrycode\")\nGitHub install_github('vincentarelbundock/countrycode')\n\n\ntmaptools\n\n\nCran install.packages(\"tmaptools\")\nGitHub devtools::install_github(\"mtennekes/tmaptools\")\n\n\nDT\n\n\nCran install.packages(\"DT\")\nGitHub remotes::install_github(\"rstudio/DT\")\n\n\nusmap\n\n\nCran install.packages(\"usmap\")\nGitHub devtools::install_github(\"pdil/usmap\")\n\n\ntigris\n\n\nCran install.packages(\"tigris\")\nGitHub devtools::install_github(\"walkerke/tigris\")\n\n\nscales\n\n\nCran install.packages(\"scales\")\nGitHub devtools::install_github(\"r-lib/scales\")\n\n\nggrepel\n\n\nCran install.packages(\"ggrepel\")\nGitHub devtools::install_github(\"slowkow/ggrepel\")\n\n\ntidycensus\n\n\nCran install.packages(\"tidycensus\")\nGitHub remotes::install_github(\"walkerke/tidycensus\")",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>R packages for GIS</span>"
    ]
  },
  {
    "objectID": "lecture_6.html",
    "href": "lecture_6.html",
    "title": "6  Making map of Tokyo",
    "section": "",
    "text": "6.1 Population Map of Tokyo\ndf_tokyo_sf &lt;- jpn_pref(13, district = TRUE) %&gt;% \n  dplyr::filter(str_detect(city, \"区\"))\ndf_tokyo_sf %&gt;%\n  ggplot() +\n  geom_sf() +\n  theme_minimal()\nhead(df_tokyo_sf, 23)\n\nSimple feature collection with 23 features and 4 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 139.5636 ymin: 35.52086 xmax: 139.919 ymax: 35.81758\nGeodetic CRS:  WGS 84\n# A tibble: 23 × 5\n   pref_code prefecture city_code city                                  geometry\n   &lt;chr&gt;     &lt;chr&gt;      &lt;chr&gt;     &lt;chr&gt;                       &lt;MULTIPOLYGON [°]&gt;\n 1 13        東京都     13101     千代田区 (((139.7299 35.68555, 139.7333 35.67…\n 2 13        東京都     13102     中央区   (((139.7589 35.65892, 139.7646 35.65…\n 3 13        東京都     13103     港区     (((139.7714 35.62304, 139.7825 35.62…\n 4 13        東京都     13104     新宿区   (((139.6735 35.71852, 139.679 35.718…\n 5 13        東京都     13105     文京区   (((139.7174 35.71455, 139.7232 35.71…\n 6 13        東京都     13106     台東区   (((139.7632 35.72184, 139.7685 35.71…\n 7 13        東京都     13107     墨田区   (((139.8095 35.68689, 139.812 35.688…\n 8 13        東京都     13108     江東区   (((139.7715 35.61667, 139.7712 35.61…\n 9 13        東京都     13109     品川区   (((139.6954 35.60832, 139.6957 35.61…\n10 13        東京都     13110     目黒区   (((139.6664 35.61861, 139.6631 35.61…\n# ℹ 13 more rows\ndf_tokyo_pop &lt;- read_csv(\"data/csv/tokyo_pop.csv\")\ndatatable(df_tokyo_pop)\nmerge_tokyo &lt;- df_tokyo_sf %&gt;% \n  left_join(df_tokyo_pop, by = \"city\") %&gt;% \n  st_as_sf()\nmerge_tokyo %&gt;% \n  head() %&gt;% \n  rmarkdown::paged_table()\nmap_pop_tokyo &lt;- merge_tokyo %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = population)) +\n  scale_fill_distiller(name = \"Population\",\n                       palette = \"Greens\", direction = 1) +\n  theme_map(base_family = \"HiraginoSans-W3\") +\n  theme(legend.position = c(.1, -.1),\n        legend.direction = \"horizontal\",\n        legend.title = element_text(size = 15), \n        legend.text = element_text(size = 15),\n        legend.key.size = unit(1, \"cm\"),\n        legend.key.width = unit(3,\"cm\")) +\n  coord_sf(datum = NA) \n\nmap_pop_tokyo\n\n\n\n\nPopulation of Tokyo, Japan\nmap_pop_tokyo_text &lt;- merge_tokyo %&gt;% \n  mutate(\n    text_x = map_dbl(geometry, ~st_centroid(.x)[[1]]),\n    text_y = map_dbl(geometry, ~st_centroid(.x)[[2]])\n  ) %&gt;% \n  ggplot() +\n  geom_sf(aes(fill = population)) +\n  geom_label(aes(x = text_x, y = text_y, label = city), \n             size = 1.7, family = \"HiraginoSans-W3\") +\n  scale_fill_distiller(name = \"Population\",\n                       palette = \"Greens\", direction = 1) +\n  theme_map(base_family = \"HiraginoSans-W3\") +\n  theme(legend.position = c(.8, .05),\n        legend.title = element_text(size = 10), \n        legend.text = element_text(size = 5),\n        legend.key.size = unit(0.5, \"cm\"),\n        legend.key.width = unit(1,\"cm\")) +\n  coord_sf(datum = NA) \n\nmap_pop_tokyo_text\n\n\n\n\nPopulation of Tokyo, Japan\nggsave(\"fig/map_pop_tokyo_text.png\", map_pop_tokyo_text, width = 13, height = 13)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Making map of Tokyo</span>"
    ]
  },
  {
    "objectID": "lecture_6.html#population-map-of-tokyo",
    "href": "lecture_6.html#population-map-of-tokyo",
    "title": "6  Making map of Tokyo",
    "section": "",
    "text": "The prefecture code for Tokyo is 13. Now we can plot the map of the 23 wards of Tokyo\n\n\n\nDisplay the extracted map of Tokyo’s 23 wards\n\n\n\nCheck your data here\n\n\n\nImport the .CSV data to make an interactive population map of Tokyo\n\n\n\nMerge the spatial data with your population data\n\n\n\nCheck the merged data\n\n\n\nPlot your data with ggplot2\n\n\n\nPlot your population data with the name of the cities in Tokyo\n\n\n\nTo export the above figure, use the following code:",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Making map of Tokyo</span>"
    ]
  }
]